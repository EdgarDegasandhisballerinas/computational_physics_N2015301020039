from __future__ import division
from math import *
from pylab import *
from numpy import *

def pendulum(F):
    q, l, g = 0.5 ,9.8, 9.8
    dt = pi/100
    theta = [0.2]
    omg = [0]
    t = [0]
    x = []
    while t[-1] <= 1200*pi:
        omg.append(omg[-1] - ((g/l)*sin(theta[-1]) + q*omg[-1] - F*sin((2/3+0.001)*t[-1]))*dt)
        theta.append(theta[-1] + omg[-1]*dt)
        t.append(t[-1] + dt)        
        if theta[-1] > pi:
            theta[-1] -= 2*pi
        elif theta[-1] < -pi:
            theta[-1] += 2*pi
        if t[-1]>=900*pi and t[-1]%(3*pi)<=dt:
            x.append(theta[-1])        
    return x


n=list(linspace(1.35,1.5,100))
F=[]
theta=[]
for i in n:
    points=pendulum(i)
    for j in points:
        F.append(i)
        theta.append(j)
            
chart()        
fig= plt.figure(figsize=(20,12))
plt.scatter(F,theta,color='orange',marker='>')
plt.xlabel('F',fontsize=15)
plt.ylabel("theta",fontsize=15)
plt.title("bufurication diagram",fontsize=15)
plt.grid(True)
plt.show()
